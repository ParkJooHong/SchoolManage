<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="stuMapper">


	<!-- MEM_STU -> 찐 학생 메뉴 -->
	<resultMap type="com.study.test.stu.vo.StuVO" id="stu">
		<id column="STU_NO" property="stuNo" />
		<result column="COLL_NO" property="collNo" />
		<result column="DEPT_NO" property="deptNo" />
		<result column="DOUBLE_NO" property="doubleNo" />
		<result column="STU_YEAR" property="stuYear" />
		<result column="STU_SEM" property="stuSem" />
		<result column="STU_STATUS" property="stuStatus" />
		<result column="MEM_NO" property="memNo" />
		<result column="PARENT_NAME" property="parentName" />
		<result column="PARENT_TELL" property="parentTell" />
		<result column="STU_BANK_NAME" property="stuBankName" />
		<result column="STU_BANK_ACCOUNT" property="stuBankAccount" />
		<result column="PROB_CNT" property="probCnt" />


	</resultMap>

	<!-- 사용자 메뉴 -->
	<resultMap type="com.study.test.member.vo.MemberVO"
		id="member">
		<id column="MEM_NO" property="memNo" />
		<result column="MEM_PW" property="memPw" />
		<result column="MEM_NAME" property="memName" />
		<result column="MEM_EMAIL" property="memEmail" />
		<result column="MEM_ADDR" property="memAddr" />
		<result column="MEM_ADDR_DETAIL" property="memAddrDetail" />
		<result column="MEM_TELL" property="memTell" />
		<result column="MEM_IMAGE" property="memImage" />
		<result column="MEM_GENDER" property="memGender" />
		<result column="MEM_BIRTH" property="memBirth" />
		<result column="MEM_ROLE" property="memRole" />
		<association property="memImgVO" resultMap="memberMapper.memImg" />
		<association property="stuVO" resultMap="stu" />
		<association property="doubleMajorVO" resultMap="schoolMapper.doubleMajor" />
		<association property="colleageVO" resultMap="schoolMapper.colleage" />
		<association property="deptVO" resultMap="schoolMapper.dept" />
		<association property="memImgVO" resultMap="memberMapper.memImg" />
		<association property="stuOutVO" resultMap="adminMapper.stuOut"/>
	</resultMap>

	<!-- 학적 상태 -->
	<resultMap type="com.study.test.stu.vo.StatusInfoVO"
		id="statusInfo">
		<id column="STATUS_NO"				property="statusNo" />
		<result column="STU_NO" 			property="stuNo" />
		<result column="NOW_STATUS" 		property="nowStatus" />
		<result column="AFTER_STATUS" 		property="afterStatus" />
		<result column="APPLY_DATE" 		property="applyDate" />
		<result column="APPROVAL_DATE" 		property="approvalDate" />
		<result column="ING_STATUS" 		property="ingStatus" />
		<result column="STATUS_REASON" 		property="statusReason" />
		<result column="FROM_DATE" 			property="fromDate" />
		<result column="TO_DATE" 			property="toDate" />
		<result column="ACCEPT_DATE" 		property="acceptDate"/>
		<result column="DATA_CNT" 			property="dataCnt"/>
		<result column="LAST_DAY" 			property="lastDay"/>
		<association property="memberVO" 	resultMap="memberMapper.member" />
		<association property="colleageVO" 	resultMap="schoolMapper.colleage" />
		<association property="deptVO" 		resultMap="schoolMapper.dept" />
		<association property="stuVO" 		resultMap="stu" />
	</resultMap>

	<!-- 전과신청 -->
	<resultMap type="com.study.test.school.dept.DeptManageVO"
		id="deptManage">
		<id column="APPLY_NO" property="applyNo" />
		<result column="STU_NO" property="stuNo" />
		<result column="APPLY_CODE" property="applyCode" />
		<result column="APPLY_DATE" property="applyDate" />
		<result column="APPLY_REASON" property="applyReason" />
		<result column="APPLROVAL_DATE" property="applrovalDate" />
		<result column="PROCESS_STATUS" property="processStatus" />
		<result column="FROM_COLL" property="fromColl" />
		<result column="TO_COLL" property="toColl" />
		<result column="FROM_DEPT" property="fromDept" />
		<result column="TO_DEPT" property="toDept" />
		<result column="DOUBLE_MAJOR_COLL" property="doubleMajorColl" />
		<result column="DOUBLE_MAJOR_DEPT" property="doubleMajorDept" />
		<result column="STU_YEAR" property="stuYear" />
		<result column="STU_SEM" property="stuSem" />
		<association property="memberVO"
			resultMap="memberMapper.member" />
		<association property="stuVO" resultMap="stuMapper.stu" />
		<association property="colleageVO"
			resultMap="schoolMapper.colleage" />
		<association property="deptVO"
			resultMap="schoolMapper.dept" />
	</resultMap>

	<!--휴학 신청 -->
	<resultMap type="com.study.test.stu.vo.LeaveManageVO"
		id="leaveManage">
		<id column="APPLY_NO" property="applyNo" />
		<result column="STU_NO" property="stuNo" />
		<result column="APPLY_DATE" property="applyDate" />
		<result column="STU_STATUS" property="stuStatus" />
		<result column="APPLY_REASON" property="applyReason" />
		<result column="APPLROVAL_DATE" property="applrovalDate" />
		<result column="PROCESS_STATUS" property="processStatus" />
		<result column="STU_YEAR" property="stuYear" />
		<result column="STU_SEM" property="stuSem" />
		<result column="STATUS_REASON" property="statusReson" />

	</resultMap>

	<!-- 강의 정보 -->
	<resultMap type="com.study.test.professor.vo.LectureVO"
		id="lecture">
		<id column="LEC_NO" property="lecNo" />
		<result column="LEC_NAME" property="lecName" />
		<result column="LEC_SCORE" property="lecScore" />
		<result column="COLL_NO" property="collNo" />
		<result column="DEPT_NO" property="deptNo" />
		<result column="EMP_NO" property="empNo" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="MAX_MEM" property="maxMem" />
		<result column="NOW_MEM" property="nowMem" />
		<result column="SEM_NO" property="semNo" />
		<result column="LEC_STATUS" property="lecStatus" />
		<result column="MEM_NAME" property="memName" />
		<association property="lecturePdfVO"
			resultMap="professorMapper.lecturePdf" />
		<association property="colleageVO"
			resultMap="schoolMapper.colleage" />
		<association property="deptVO"
			resultMap="schoolMapper.dept" />
		<association property="semesterVO"
			resultMap="schoolMapper.semester" />
		<association property="stuVO" resultMap="stuMapper.stu" />
		<collection property="lectureTimeList"
			resultMap="professorMapper.lectureTime" />
	</resultMap>


	<!-- 멤버 조회 -->
	<select id="selectMember" resultMap="member">
		SELECT MEM_NO
		, MEM_PW
		, MEM_NAME
		, MEM_EMAIL
		, MEM_ADDR
		, MEM_ADDR_DETAIL
		, MEM_TELL
		, MEM_IMAGE
		, MEM_GENDER
		, MEM_BIRTH
		, MEM_ROLE
		FROM UNI_MEMBER
		WHERE MEM_NO = #{memNo}
	</select>

	<!-- 학생 정보 조회 -->
	<!-- <select id="seletStu" resultType="String"> -->
	<select id="seletStu" resultMap="member">
		SELECT UM.MEM_NO
		, MEM_PW
		, MEM_ADDR
		, MEM_ADDR_DETAIL
		, MEM_ROLE
		, MEM_NAME
		, US.STU_NO
		, US.COLL_NO
		, US.DEPT_NO
		, DOUBLE_NO
		, STU_YEAR
		, STU_SEM
		, STU_STATUS
		, PARENT_NAME
		, PARENT_TELL
		, STU_BANK_NAME
		, STU_BANK_ACCOUNT
		, COLL_NAME
		, DEPT_NAME
		, IMG_CODE
		, ORIGIN_FILE_NAME
		, ATTACHED_FILE_NAME
		, IS_MAIN
		FROM UNI_STU US, UNI_MEMBER UM, COLLEAGE C, DEPT D, MEM_IMG MI
		WHERE US.COLL_NO = C.COLL_NO
		AND UM.MEM_NO = US.MEM_NO
		AND D.DEPT_NO =
		US.DEPT_NO
		AND UM.MEM_NO = MI.MEM_NO
		AND UM.MEM_NO = #{memNo}
	</select>

	<!-- 대학 코드 갖고오기. -->
	<select id="getColl" resultMap="stu">
		SELECT COLL_NO
		FROM UNI_STU
		WHERE
		MEM_NO = #{memNo}
	</select>

	<!-- 전과신청 -->
	<insert id="moveManage">
		INSERT INTO DEPT_MANAGE(
		APPLY_NO
		, STU_NO
		, APPLY_CODE
		, APPLY_DATE
		, APPLY_REASON
		, APPLROVAL_DATE
		, PROCESS_STATUS
		, FROM_COLL
		, TO_COLL
		, FROM_DEPT
		, TO_DEPT
		, DOUBLE_MAJOR_COLL
		, DOUBLE_MAJOR_DEPT
		, STU_YEAR
		, STU_SEM
		) VALUES(
		(SELECT 'APPLY_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO, 7))), 0) +1 , 3,
		'0')
		FROM DEPT_MANAGE)
		, #{stuNo}
		, #{applyCode}
		, SYSDATE
		, #{applyReason}
		, TO_DATE('9999-12-30', 'YYYY-MM-DD')
		,'승인대기'
		, #{fromColl}
		, #{toColl}
		, #{fromDept}
		, #{toDept}
		, #{doubleMajorColl}
		, #{doubleMajorDept}
		, #{stuYear}
		, #{stuSem}
		)
	</insert>
	
	<!-- 전과 신청 조회  -->
	<select id="getDeptManager" resultMap="deptManage">
		SELECT APPLY_NO
			, STU_NO
			, APPLY_CODE
			, APPLY_DATE
			, APPLY_REASON
			, APPLROVAL_DATE
			, PROCESS_STATUS
			, FROM_COLL
			, TO_COLL
			, FROM_DEPT
			, TO_DEPT
			, DOUBLE_MAJOR_COLL
			, DOUBLE_MAJOR_DEPT
			, STU_YEAR
			, STU_SEM
		FROM DEPT_MANAGE
		WHERE STU_NO = #{stuNo}
	</select>
	
	<!-- 복수전공 신청 -->
	<insert id="doubleMajorApply">
		INSERT INTO DEPT_MANAGE (
		    APPLY_NO
		    , STU_NO
		    , APPLY_CODE
		    , APPLY_DATE
		    , APPLY_REASON
		    , APPLROVAL_DATE
		    , PROCESS_STATUS
		    , FROM_COLL
		    , TO_COLL
		    , FROM_DEPT
		    , TO_DEPT
		    , DOUBLE_MAJOR_COLL
		    , DOUBLE_MAJOR_DEPT
		    , STU_YEAR
		    , STU_SEM
		    ) VALUES (
		    (SELECT 'APPLY_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO, 7))), 0) +1 , 3,
				'0') FROM DEPT_MANAGE)
		    , #{stuNo}
		    , #{applyCode}
		    , SYSDATE
		    , #{applyReason}
		    , SYSDATE
		    , '승인대기'
		    , NULL
		    , NULL
		    , NULL
		    , NULL
		    , #{doubleMajorColl}
		    , #{doubleMajorDept}
		    , #{stuYear}
		    , #{stuSem}
		    )
	</insert>

	<!-- 휴학신청 -->
	<insert id="leaveManage">
		INSERT INTO LEAVE_MANAGE(
		APPLY_NO
		, STU_NO
		, STU_STATUS
		, APPLY_DATE
		, APPLY_REASON
		, APPLROVAL_DATE
		, PROCESS_STATUS

		) VALUES(
		(SELECT 'APPLY_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(APPLY_NO, 7))), 0) +1 , 3,
		'0')
		FROM DEPT_MANAGE)
		, #{stuNo}
		, #{stuStatus}
		, SYSDATE
		, #{applyReason}
		, TO_DATE('9999-12-30', 'YYYY-MM-DD')
		, '승인대기'
		)
	</insert>

	<!-- 학적 상태 조회 X -->
	<select id="getStatusInfo" resultMap="statusInfo">
		SELECT
		STATUS_NO
		, STU_NO
		, NOW_STATUS
		, AFTER_STATUS
		, APPLY_DATE
		, APPROVAL_DATE
		, ING_STATUS
		, STATUS_REASON
		FROM STATUS_INFO
		WHERE STU_NO = #{stuNo}
	</select>


	<!-- 학생 정보 변경 -->
	<update id="updateStu">
		UPDATE UNI_STU
		SET PARENT_NAME = #{parentName}
		, PARENT_TELL = #{parentTell}
		, STU_BANK_NAME = #{stuBankName}
		, STU_BANK_ACCOUNT = #{stuBankAccount}
		WHERE MEM_NO = #{memNo}
	</update>
	<update id="updateMem">
		UPDATE UNI_MEMBER
		SET MEM_ADDR = #{memAddr}
		, MEM_ADDR_DETAIL = #{memAddrDetail}
		WHERE MEM_NO = #{memNo}
	</update>

	<!-- 학생 이미지 변경 -->
	<update id="updateStuImg">
		UPDATE MEM_IMG
		SET ORIGIN_FILE_NAME =
		#{originFileName}
		, ATTACHED_FILE_NAME = #{attachedFileName}
		WHERE MEM_NO = #{memNo}
	</update>

	<!-- 학생 비밀번호 변경 -->
	<update id="updateStuPwd">
		UPDATE UNI_MEMBER
		SET MEM_PW = #{memPw}
		WHERE MEM_NO =
		#{memNo}
	</update>

	<!-- 휴학 신청. -->
	<insert id="leav">
		INSERT INTO STATUS_INFO(
		STATUS_NO
		, STU_NO
		, NOW_STATUS
		, AFTER_STATUS
		, APPLY_DATE
		, APPROVAL_DATE
		, ING_STATUS
		, STATUS_REASON
		) VALUES(
		(SELECT 'STA_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(STATUS_NO, 5))), 0) +1 , 3,
		'0')
		FROM STATUS_INFO)
		, #{stuNo}
		, #{nowStatus}
		, '휴학'
		, SYSDATE
		, SYSDATE
		, '승인대기'
		, #{statusReason}
		)
	</insert>

	<!-- 복학 신청. -->
	<insert id="returnManage">
		INSERT INTO STATUS_INFO(
		STATUS_NO
		, STU_NO
		, NOW_STATUS
		, AFTER_STATUS
		, APPLY_DATE
		, APPROVAL_DATE
		, ING_STATUS
		, STATUS_REASON
		) VALUES(
		(SELECT 'STA_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(STATUS_NO, 5))), 0) +1 , 3,
		'0')
		FROM STATUS_INFO)
		, #{stuNo}
		, #{nowStatus}
		, '재학'
		, SYSDATE
		, SYSDATE
		, '승인대기'
		, #{statusReason}
		)
	</insert>


	<!-- 학적 상태 조회 (휴학 신청 상태 조회 ) -->
	<select id="getStatusLeaveInfo" resultMap="statusInfo">
		SELECT STATUS_NO
		, STU_NO
		, NOW_STATUS
		, AFTER_STATUS
		, APPLY_DATE
		, APPROVAL_DATE
		, ING_STATUS
		FROM STATUS_INFO
		WHERE STU_NO = #{stuNo}
		AND NOW_STATUS =
		'재학'
	</select>

	<!-- 학적 상태 조회 (복학 신청 상태 조회 ) -->
	<select id="getStatusReturnInfo" resultMap="statusInfo">
		SELECT STATUS_NO
		, STU_NO
		, NOW_STATUS
		, AFTER_STATUS
		, APPLY_DATE
		, APPROVAL_DATE
		, ING_STATUS
		FROM STATUS_INFO
		WHERE STU_NO = #{stuNo}
		AND NOW_STATUS =
		'휴학'
	</select>

	<!-- 학적 상태 조회 (전과 신청 상태 조회 ) -->
	<select id="getStatusMoveInfo" resultMap="deptManage">
		SELECT
		APPLY_NO
		, STU_NO
		, APPLY_CODE
		, APPLY_DATE
		, APPLY_REASON
		, APPLROVAL_DATE
		, PROCESS_STATUS
		, FROM_COLL
		, TO_COLL
		, FROM_DEPT
		, TO_DEPT
		, DOUBLE_MAJOR_COLL
		, DOUBLE_MAJOR_DEPT
		, STU_YEAR
		, STU_SEM
		FROM DEPT_MANAGE
		WHERE STU_NO = #{stuNo}
	</select>

	<!-- 휴학에서 복학 신청할 때 승인상태 변경 -->
	<update id="ingStatusUpdate">
		UPDATE STATUS_INFO
		SET ING_STATUS = '승인대기'
		WHERE STU_NO
		= #{stuNo}
		AND NOW_STATUS = '휴학'
	</update>

	<!-- COUNT -->
	<select id="IngStatusWait" resultType="int">
		SELECT COUNT(STU.STU_NO)
		FROM UNI_STU STU , STATUS_INFO INFO
		WHERE STU.STU_NO
		= INFO.STU_NO
		AND NOW_STATUS = STU_STATUS
		AND STU.STU_NO = #{stuNo}
		AND
		ING_STATUS = '승인대기'
	</select>
	
	<!-- 학사 경고 학생 조회 -->
	<select id="getProbation" resultMap="adminMapper.probation" >
		SELECT PROB_NO
			, STU_NO
			, TO_CHAR(PROB_DATE, 'YYYY-MM-DD') AS PROB_DATE
			, PROB_REASON
			, SEM_NO
			, MEM_NO
		FROM ACADEMIC_PROBATION
		WHERE STU_NO = #{stuNo}
	</select>

	<!-- 수강신청 -->
	<insert id="applyLecture">
		INSERT INTO ENROLLMENT (
		ENROLLMENT_NO
		, STU_NO
		, LEC_NO
		, SEM_NO
		) VALUES (
		(SELECT 'ENROL_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ENROLLMENT_NO, 7))), 0) +1,
		LENGTH(NVL(MAX(TO_NUMBER(SUBSTR(ENROLLMENT_NO, 7))), 0) +1) , '0')
		FROM ENROLLMENT)
		, #{stuNo}
		, #{lecNo}
		, #{semNo}
		)
	</insert>
	

	<!-- 수강신청 시 수강인원 제한 -->
	<update id="updateLectureCount">
		UPDATE LECTURE
		SET MAX_MEM = #{maxMem} - 1
		, NOW_MEM = #{nowMem} + 1
		WHERE LEC_NO = #{lecNo}
	</update>
	
	<!-- 수강신청시 학생 성적 테이블 삽입 -->
	<insert id="insertGrade">
		INSERT INTO STU_GRADE (
			STU_GRADE_NO
			, LEC_NO
			, GRADE
			, STU_NO
			, SEM_NO
		) VALUES(
		(SELECT 'STU_GRADE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(STU_GRADE_NO, 11))), 0) +1,
				LENGTH(NVL(MAX(TO_NUMBER(SUBSTR(STU_GRADE_NO, 11))), 0) +1) , '0') FROM STU_GRADE)
		, #{lecNo}
		, NULL
		, #{stuNo}
		, #{semNo}
		)
	</insert>

	<!-- 수강신청한 화면 조회 -->
	<select id="applyLectureList" resultMap="lecture">
		SELECT
		LEC.LEC_NO
		, LEC_NAME
		, LEC_SCORE
		, COLL_NAME
		, DEPT_NAME
		, MAX_MEM
		, NOW_MEM
		, LEC_DAY
		, START_TIME
		, FINISH_TIME
		, ATTACHED_PDF_NAME
		, ORIGIN_PDF_NAME
		, TO_CHAR(CREATE_DATE, 'YYYY') AS CREATE_DATE
		, LEC_STATUS
		, SEM_NAME
		, UM.MEM_NAME
		, TIME_NO
		, SEM.SEM_NO
		FROM LECTURE LEC
		, COLLEAGE COL
		, DEPT DEPT
		, UNI_MEMBER UM
		, LECTURE_TIME LT
		, SEMESTER SEM
		, LECTURE_PDF LP
		, UNI_STU US
		, ENROLLMENT EN
		WHERE LEC.COLL_NO = COL.COLL_NO
		AND LEC.DEPT_NO =
		DEPT.DEPT_NO
		AND UM.MEM_NO = LEC.EMP_NO
		AND LT.LEC_NO = LEC.LEC_NO
		AND
		SEM.SEM_NO = LEC.SEM_NO
		AND LP.LEC_NO = LEC.LEC_NO
		AND EN.LEC_NO = LEC.LEC_NO
		AND EN.STU_NO = US.STU_NO
		AND US.STU_NO = #{stuNo}
	</select>
	
	
	<!-- 수강취소-->
	<delete id="lectureCancel">
		DELETE ENROLLMENT
		WHERE STU_NO = #{stuNo}
		AND LEC_NO = #{lecNo}
		AND SEM_NO = #{semNo}
	</delete>
	
	<!-- 수강 취소시 학생 성적테이블도 삭제 -->
	<delete id="gradeCancel">
		DELETE STU_GRADE
		WHERE STU_NO = #{stuNo}
		AND LEC_NO = #{lecNo}
		AND SEM_NO = #{semNo}
	</delete>
	
	<!-- 수강취소 시 수강인원 제한 -->
	<update id="lectureCancelUpdateCount">
		UPDATE LECTURE
		SET MAX_MEM = #{maxMem} + 1
		, NOW_MEM = #{nowMem} - 1
		WHERE LEC_NO = #{lecNo}
	</update>
	
	<!-- 학생 성적 조회 -->
	<select id="getStuGrade" >
		SELECT STU_GRADE_NO
		    , SG.LEC_NO
		    , GRADE
		    , STU_NO
		    , SG.SEM_NO
		    , LEC_NAME
		    , LEC_SCORE
		    , UE.COLL_NO
		    , UE.DEPT_NO
		    , UE.EMP_NO
		    , UE.MEM_NO
		    , MEM_NAME
		FROM STU_GRADE SG, LECTURE L , UNI_EMP UE, UNI_MEMBER UM
		WHERE SG.LEC_NO = L.LEC_NO
		AND L.EMP_NO = UE.EMP_NO
		AND UE.MEM_NO = UM.MEM_NO
	</select>

</mapper>


























