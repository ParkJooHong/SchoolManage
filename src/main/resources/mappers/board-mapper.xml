<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">

	
	<resultMap type="com.study.test.board.vo.BoardCategoryVO" id="boardCategory">
		<id column="CATE_NO" 			property="cateNo"/>
		<result column="CATE_NAME" 			property="cateName"/>
		<result column="IS_USE" 			property="isUse"/>

	</resultMap>


	<resultMap type="com.study.test.board.vo.UniBoardVO" id="uniBoard">
		<id column="BOARD_NO" 				property="boardNo"/>
		<result column="BOARD_TITLE" 		property="boardTitle"/>
		<result column="BOARD_CONTENT" 		property="boardContent"/>
		<result column="BOARD_WRITER" 		property="boardWriter"/>
		<result column="REG_BOARD_DATE" 	property="regBoardDate"/>
		<result column="READ_CNT" 			property="readCnt"/>
		<result column="CATE_NO" 			property="cateNo"/>
		<result column="REPLY_CNT" 			property="replyCnt"/>
		<result column="IS_PRIVATE" 		property="isPrivate"/>
		<result column="IS_NOTICE" 			property="isNotice"/>
		<result column="DEPT_NO" 			property="deptNo"/>
		<result column="BOARD_PW" 			property="boardPw"/>
		<result column="CATE_NAME" 			property="cateName"/>
		<association property="memImgVO" resultMap="memberMapper.memImg"/>
	</resultMap>
	
	<resultMap type="com.study.test.board.vo.BoardReplyVO" id="reply">
		<id column="REPLY_NO" 					property="replyNo"/>
		<result column="BOARD_NO" 				property="boardNo"/>
		<result column="REPLY_CONTENT" 			property="replyContent"/>
		<result column="REPLY_WRITER" 			property="replyWriter"/>
		<result column="IS_PRIVATE" 			property="isPrivate"/>
		<result column="REPLY_PW" 				property="replyPw"/>
		<association property="memImgVO" resultMap="memberMapper.memImg"/>
	</resultMap> 
	
	<!-- 보드 게시판 카테고리 조회 -->
		<select id="getBoardCategoryList" resultMap="boardCategory">
			SELECT CATE_NO
				, CATE_NAME
				, IS_USE
			FROM BOARD_CATEGORY
			ORDER BY CATE_NO
		</select>
		
		<!-- 나의 게시판 조회-->
		<select id="getTotalMyBoardList" resultMap="uniBoard">
			SELECT BOARD_NO
				, BOARD_TITLE
				, BOARD_CONTENT
				, BOARD_WRITER
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD') AS REG_BOARD_DATE
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD HH24:MI:SS') AS REG_BOARD_DATE_ORDER
				, READ_CNT
				, CATE_NO
				, REPLY_CNT
				, IS_PRIVATE
				, IS_NOTICE
			FROM UNI_BOARD
			WHERE BOARD_WRITER = #{boardWriter}
			<if test="month != 0">
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD' ) &gt;= TO_CHAR(ADD_MONTHS(SYSDATE, #{month}), 'YYYY-MM-DD') 
			</if>
			<if test="fromDate != null" >
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
			</if>
			<if test='searchValue != null and !searchValue.equals("")'>
	       		  AND UPPER(${searchKeyword}) LIKE '%' || UPPER(#{searchValue}) || '%'
	        </if>
			ORDER BY ${orderBy} DESC
			OFFSET #{offsetCnt} ROWS FETCH FIRST #{displayCnt} ROWS ONLY
		</select>
		
		<!-- 학과 게시판 조회 -->
		<select id="getTotalDeptBoardList" resultMap="uniBoard">
			SELECT BOARD_NO
				, BOARD_TITLE
				, BOARD_CONTENT
				, BOARD_WRITER
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD') AS REG_BOARD_DATE
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD HH24:MI:SS') AS REG_BOARD_DATE_ORDER
				, READ_CNT
				, UB.CATE_NO
				, REPLY_CNT
				, IS_PRIVATE
				, IS_NOTICE
				, DEPT_NO
				, CATE_NAME
			FROM UNI_BOARD UB, BOARD_CATEGORY BC
			WHERE DEPT_NO =#{deptNo}
			AND UB.CATE_NO = BC.CATE_NO
			<if test="month != 0">
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD' ) &gt;= TO_CHAR(ADD_MONTHS(SYSDATE, #{month}), 'YYYY-MM-DD') 
			</if>
			<if test="fromDate != null" >
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
			</if>
			<if test='searchValue != null and !searchValue.equals("")'>
	       		  AND UPPER(${searchKeyword}) LIKE '%' || UPPER(#{searchValue}) || '%'
	        </if>
			ORDER BY ${orderBy} DESC
			OFFSET #{offsetCnt} ROWS FETCH FIRST #{displayCnt} ROWS ONLY
		</select>
		
	<!-- 전체 게시판 조회-->
		<select id="getTotalBoardList" resultMap="uniBoard">
			SELECT BOARD_NO
				, BOARD_TITLE
				, BOARD_CONTENT
				, BOARD_WRITER
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD') AS REG_BOARD_DATE
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD HH24:MI:SS') AS REG_BOARD_DATE_ORDER
				, READ_CNT
				, UNI_BOARD.CATE_NO
				, CATE_NAME
				, REPLY_CNT
				, IS_PRIVATE
				, IS_NOTICE
			FROM UNI_BOARD, BOARD_CATEGORY
			WHERE UNI_BOARD.CATE_NO = BOARD_CATEGORY.CATE_NO
			AND UNI_BOARD.CATE_NO != 'CATE_002'		
			<if test='categoryList != null'>
				<choose>
			        <when test='categoryList.equals("CATE_001")'>
			            AND (UNI_BOARD.CATE_NO = 'CATE_001' OR UNI_BOARD.CATE_NO = 'CATE_003' OR UNI_BOARD.CATE_NO = 'CATE_004' OR UNI_BOARD.CATE_NO = 'CATE_005')
			        </when>
			        <otherwise>
			            AND UNI_BOARD.CATE_NO = '${categoryList}'
			        </otherwise>
			    </choose>
			</if>				
			<if test="month != null and month != 0">
			AND TO_CHAR(REG_BOARD_DATE, 'YYYYMMDD' ) &gt;= TO_CHAR(ADD_MONTHS(SYSDATE, #{month}), 'YYYYMMDD') 
			</if>
			<if test="fromDate != null" >
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
			</if>
			<if test='searchValue != null and !searchValue.equals("")'>
	       		  AND UPPER(${searchKeyword}) LIKE '%' || UPPER(#{searchValue}) || '%'
	        </if>
	        ORDER BY ${orderBy} DESC
			 OFFSET #{offsetCnt} ROWS FETCH FIRST #{displayCnt} ROWS ONLY
		</select>
		
		<!-- 전체 게시판 최근 개월별 조회 -->
		<select id="getMonthBoardList" resultType="int">
			SELECT BOARD_NO
				, BOARD_TITLE
				, BOARD_CONTENT
				, BOARD_WRITER
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD') AS REG_BOARD_DATE
				, TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD HH24:MI:SS') AS REG_BOARD_DATE_ORDER
				, READ_CNT
				, CATE_NO
				, REPLY_CNT
				, IS_PRIVATE
				, IS_NOTICE
			FROM UNI_BOARD
			<if test="month != null and month != 0">
				WHERE TO_CHAR(REG_BOARD_DATE,'YYYY-MM-DD') &gt;= TO_CHAR(ADD_MONTHS(SYSDATE, #{month}), 'YYYY-MM-DD')
			</if>
			ORDER BY ${orderBy} DESC		
		</select>
		
		<!-- 나의 게시판 개수 조회 -->
		<select id="totalBoardCount" resultType="int">
			SELECT COUNT(BOARD_NO)
			FROM UNI_BOARD
			WHERE BOARD_WRITER = #{boardWriter}
			<if test="month != null and month != 0">
			AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD' ) &gt;= TO_CHAR(ADD_MONTHS(SYSDATE, #{month}), 'YYYY-MM-DD') 
			</if>
			<if test="fromDate != null" >
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
			</if>        
		</select>
		
		<!-- 보드 게시판 페이징 조회 -->
		<select id="totalBoardPage" resultType="int">
			SELECT COUNT(BOARD_NO)
			FROM UNI_BOARD
			WHERE READ_CNT &gt;= 0
			<if test="month != null and month != 0">
			AND TO_CHAR(REG_BOARD_DATE, 'YYYYMMDD' ) &gt;= TO_CHAR(ADD_MONTHS(SYSDATE, #{month}), 'YYYYMMDD') 
			</if>
			<if test="fromDate != null" >
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
				AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
			</if>
			<if test='!searchValue.equals("")'>
	        AND UPPER(${searchKeyword}) LIKE '%' || UPPER(#{searchValue}) || '%'
	        </if>
	        
	        
		</select>
		
	<!-- 보드 게시판 리스트  -->
		<insert id="getUniBoardList">
		INSERT INTO UNI_BOARD(
          BOARD_NO
          , BOARD_TITLE
          , BOARD_CONTENT
          , BOARD_WRITER
          , REG_BOARD_DATE
          , READ_CNT
          , CATE_NO
          , REPLY_CNT
          , IS_PRIVATE
          , IS_NOTICE       

	    ) VALUES(
	         (SELECT 'BOARD_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BOARD_NO, 7))), 0) +1 , 3, '0')
	            FROM DEPT_MANAGE)
	         , #{boardTitle}
	         , #{boardContent}
	         , #{stuNo}
	         , #{regBoardDate}
	         , #{readCnt}
	         , #{cateNo}
	         , #{replyCnt}
	         , #{isPrivate}
	         , #{isNotice}

	    )
		</insert>
	
	<!-- 보드 게시글 쓰기 -->
	<insert id="insertBoard">
		INSERT INTO UNI_BOARD(
          BOARD_NO
          , BOARD_TITLE
          , BOARD_CONTENT
          , BOARD_WRITER
          , REG_BOARD_DATE 
          , READ_CNT 
          , CATE_NO
          , REPLY_CNT
          , IS_PRIVATE 
          <if test="isNotice != null">
	          , IS_NOTICE
          </if>
          <if test="deptNo != null">
	          , DEPT_NO
          </if>
	    ) VALUES(
	         (SELECT 'BOARD_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BOARD_NO, 7))), 0) +1 , 3, '0')
	            FROM UNI_BOARD)
	         , #{boardTitle}
	         , #{boardContent}
	         , #{boardWriter}
	         , SYSDATE
	         , 0
	         , #{cateNo}
	         , 0
	         , #{isPrivate}
	          <if test="isNotice != null">
	         	, #{isNotice}
	         </if>
	         <if test="deptNo !=null">
	         	, #{deptNo}
	         </if>
	    )
	</insert>
	
	<!-- 게시글 상세보기 -->
	<select id="boardDetail" resultMap="uniBoard">
			SELECT BOARD_NO
				, BOARD_TITLE
				, BOARD_CONTENT
				, BOARD_WRITER
				, REG_BOARD_DATE
				, READ_CNT
				, CATE_NO
				, REPLY_CNT
				, IS_PRIVATE
				, IS_NOTICE
				, ATTACHED_FILE_NAME
			FROM UNI_BOARD, MEM_IMG
			WHERE BOARD_NO = #{boardNo}
			AND MEM_NO = BOARD_WRITER
	</select>
	
	
	
	<!-- 게시글 조회 수 -->
	<update id="readCnt">
		UPDATE UNI_BOARD
		SET READ_CNT = #{readCnt}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 게시글 댓글 수 -->
	<!-- <update id="replyCnt">
		UPDATE UNI_BOARD
		SET REPLY_CNT = #{replyCnt}
		WHERE BOARD_NO = #{boardNo}
	</update>
	 -->
	<!-- 게시글 수정  -->
	<update id="boardUpdate">
		UPDATE UNI_BOARD
		SET BOARD_CONTENT = #{boardContent}
			, BOARD_TITLE = #{boardTitle}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="boardDelete">
		DELETE UNI_BOARD
		WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<!--게시판 검색 및 조회  -->
	<select id="searchByBoard" resultMap="uniBoard">
		SELECT BOARD_NO
			, BOARD_TITLE
			, BOARD_WRITER
			, TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') AS REG_BOARD_DATE
			, READ_CNT
			, IS_PRIVATE
			, CATE_NO
		FROM UNI_BOARD
		WHERE 1 = 1
		<if test='searchKeyword != null and !searchKeyword.equals("") and searchValue != null and !searchValue.equals("")'>
		AND UPPER(${searchKeyword})  LIKE '%' || UPPER(#{searchValue}) || '%'
		</if>
		<if test='toDate != null and !toDate.equals("") and fromDate != null and !fromDate.equals("")'>
		AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
		AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
		</if>
		AND IS_NOTICE = 'Y'
		ORDER BY BOARD_NO DESC
		OFFSET #{offsetCnt} ROWS FETCH FIRST #{displayCnt} ROWS ONLY
	</select>
	
	<!-- 게시글 카운트  -->
	<select id="cntBoardList" resultType="int">
		SELECT COUNT(BOARD_NO)
		FROM UNI_BOARD
		WHERE 1 = 1
		<if test='searchKeyword != null and !searchKeyword.equals("") and searchValue != null and !searchValue.equals("")'>
		AND UPPER(${searchKeyword})  LIKE '%' || UPPER(#{searchValue}) || '%'
		</if>
		<if test='toDate != null and !toDate.equals("") and fromDate != null and !fromDate.equals("")'>
		AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
		AND TO_CHAR(REG_BOARD_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
		</if>
		AND IS_NOTICE = 'Y'
		OFFSET #{offsetCnt} ROWS FETCH FIRST #{displayCnt} ROWS ONLY
	</select>
	
	<!-- 게시판 상세보기 -->
	<select id="getBoardDetail" resultMap="uniBoard">
		SELECT BOARD_NO
			, BOARD_TITLE
			, BOARD_CONTENT
			, BOARD_WRITER
			, REG_BOARD_DATE
			, READ_CNT
		FROM UNI_BOARD
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<!-- 게시글 등록  -->
	<insert id="insertByBoard">
		INSERT INTO UNI_BOARD (
			BOARD_NO
			, BOARD_TITLE
			, BOARD_CONTENT
			, BOARD_WRITER
			, CATE_NO
			, IS_PRIVATE
			<if test='isPrivate != null and isPrivate.equals("Y")'>
			, BOARD_PW
			</if>
			, IS_NOTICE
		) VALUES (
	         (SELECT 'BOARD_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BOARD_NO, 7))), 0) +1 , 3, '0')
	            FROM UNI_BOARD)
	         , #{boardTitle}
	         , #{boardContent}
	         , #{boardWriter}
	         , #{cateNo}
	         , #{isPrivate}
	         <if test='isPrivate != null and isPrivate.equals("Y")'>
			 , #{boardPw}
			 </if>
			 , #{isNotice}
		)			
	</insert>
	
	<!-- 조회수 업데이트  -->
	<update id="setReadCnt">
		UPDATE UNI_BOARD
		SET READ_CNT = (SELECT NVL(MAX(READ_CNT),0)+1 
		FROM UNI_BOARD WHERE BOARD_NO = #{boardNo})
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 댓글 조회 -->
	<select id="getBoardReplyList" resultMap="reply">
		SELECT REPLY_NO
			, BOARD_NO
			, REPLY_CONTENT
			, REPLY_WRITER
			, IS_PRIVATE
			, ATTACHED_FILE_NAME
		FROM BOARD_REPLY, MEM_IMG
		WHERE BOARD_NO =#{boardNo}
		AND MEM_NO = REPLY_WRITER
	</select>
	
	<!-- 게시글 업데이트 -->
	<update id="setBoardDetail">
		UPDATE UNI_BOARD
		SET BOARD_TITLE = #{boardTitle}
			, BOARD_CONTENT = #{boardContent}
			, IS_PRIVATE = #{isPrivate}
			, IS_NOTICE = #{isNotice}
		<if test='isPrivate != null and isPrivate.equals("Y")'>
			, BOARD_PW = #{boardPw}
		</if>
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delBoard">
		DELETE UNI_BOARD
		WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 비밀글 비밀번호 확인  -->
	<select id="getCheckPw" resultType="int">
		SELECT COUNT(BOARD_NO)
		FROM UNI_BOARD
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_PW = #{boardPw}
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="regReply">
		INSERT INTO BOARD_REPLY (
			REPLY_NO
			, BOARD_NO
			, REPLY_CONTENT
			, REPLY_WRITER
			, IS_PRIVATE
			<if test='isPrivate != null and isPrivate.equals("Y")'>
			, REPLY_PW
			</if>
		) VALUES (
			(SELECT 'REPLY_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(REPLY_NO, 7))), 0) +1 , 3, '0')
	            FROM BOARD_REPLY)
	        , #{boardNo}
	        , #{replyContent}
	        , #{replyWriter}
	        , #{isPrivate}
	        <if test='isPrivate != null and isPrivate.equals("Y")'>
			, #{replyPw}
			</if>
		)
	</insert>

</mapper>


























